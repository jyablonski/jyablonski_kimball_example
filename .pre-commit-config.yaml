repos:
  # - repo: https://github.com/sqlfluff/sqlfluff
  #   rev: 3.4.1
  #   hooks:
  #     - id: sqlfluff-lint
  #       entry: env DBT_PRAC_KEY=hooks sqlfluff lint --processes 0
  #       additional_dependencies: ["dbt-postgres", "sqlfluff-templater-dbt"]
  #       types: [sql]
  #       require_serial: true
  #       language: python
  #     - id: sqlfluff-fix
  #       # Set a couple of default flags:
  #       #  - `--force` to disable confirmation
  #       #  - `--show-lint-violations` shows issues to not require running `sqlfluff lint`
  #       #  - `--processes 0` to use maximum parallelism
  #       # By default, this hook applies all rules.
  #       # stages: [manual]  # this command is available only to run manually
  #       entry: env DBT_PRAC_KEY=hooks sqlfluff fix --force --show-lint-violations --processes 0
  #       additional_dependencies: ["dbt-postgres", "sqlfluff-templater-dbt"]
  #       types: [sql]
  #       require_serial: true
  #       language: python
  # can add more hooks here https://github.com/dbt-checkpoint/dbt-checkpoint/blob/main/HOOKS.md
  # - repo: https://github.com/dbt-checkpoint/dbt-checkpoint
  #   rev: v2.0.4
  #   hooks:
  #     - id: dbt-parse
  #     - id: dbt-docs-generate
  #       args: ["--cmd-flags", "++no-compile"]
  #     - id: check-column-desc-are-same
  #     - id: check-model-has-tests
  #       args: ["--test-cnt", "1", "--"]
  - repo: local
    hooks:
      - id: sqlfluff-fix
        language: system
        name: sqlfluff fix
        entry: uv run sqlfluff fix --config pyproject.toml models/
        pass_filenames: false

  # - id: sqlfluff-lint
  #   language: system
  #   name: sqlfluff lint
  #   entry: uv run sqlfluff lint --config pyproject.toml enhanced_de_prompt_engineering/queries
  #   pass_filenames: false
