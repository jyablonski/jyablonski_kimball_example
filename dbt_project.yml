# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "jyablonski_kimball_example"
version: "1.0.0"
config-version: 2

# vars:
#   run_date: (modules.datetime.date.today() - modules.datetime.timedelta(1)).isoformat())

vars:
  run_date: "{{ (modules.datetime.date.today() - modules.datetime.timedelta(1)).isoformat() }}"
  my_var: yikes

# lines 16 - 25 are for the dbt_snowflake_monitoring package
# dispatch:
#   - macro_namespace: dbt
#     search_order:
#       - jyablonski_kimball_example
#       - dbt_snowflake_monitoring
#       - dbt

# query-comment:
#   comment: '{{ dbt_snowflake_monitoring.get_query_comment(node) }}'
#   append: true # Snowflake removes prefixed comments.

# This setting configures which "profile" dbt uses for this project.
profile: "jyablonski_kimball_example"

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# needed for elementary as of feb 2025
flags:
  require_explicit_package_overrides_for_builtin_materializations: false

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  # +grants:
  #   +select:
  #     - test_user
  #   +insert:
  #     - test_user
  #   +update:
  #     - test_user

  jyablonski_kimball_example:
    # Config indicated by + and applies to all files under models/example/
    fact:
      +materialized: table
      +schema: fact
    dim:
      +materialized: table
      +schema: dim
      +tags: dim
    marts:
      +materialized: table
      +schema: marts
    experimental:
      +materialized: table
