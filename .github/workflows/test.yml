name: dbt CI

on: 
  [pull_request]

env:
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  IAM_ROLE: ${{ secrets.IAM_ROLE }}
  AWS_REGION : "us-east-1"

permissions: write-all

jobs:
  test_pipeline:
    name: Test Pipeline
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Install Requirements
        run: |
          pip install poetry
          poetry install

      - name: Configure Aws Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          role-session-name: kimball-dbt-ci
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dbt Dependencies
        run: |
          poetry run dbt deps --target dev --profiles-dir profiles/

      - name: Get Manifest File
        run: |
          aws s3 cp s3://${{ env.S3_BUCKET }}/ci/manifest.json manifest.json

      - name: Build dbt Models
        id: build_dbt
        run: |
          make up
          poetry run dbt build --target dev --profiles-dir profiles/ --profile dbt_ci --select +state:modified+ --state ./
          make down

      - name: Upload Manifest to S3
        run: |
          aws s3 cp target/manifest.json s3://${{ env.S3_BUCKET }}/ci/manifest.json

      - name: Comment Results on PR
        uses: actions/github-script@0.9.0
        env:
          DBT_OUTPUT: "terraform\n${{ steps.build_dbt.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### dbt CI Results
            <details><summary>Show</summary>
            \`\`\`\n
            ${process.env.DBT_OUTPUT}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })